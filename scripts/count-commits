#! /usr/bin/env python3
import os
import subprocess
from collections import Counter
from datetime import datetime
from datetime import timedelta
from pathlib import Path


def find_git_repo(path):
    current_path = Path(path).resolve()
    while current_path != current_path.parent:
        if (current_path / '.git').is_dir():
            return str(current_path)
        current_path = current_path.parent
    return None


def main():
    REPO_PATH = find_git_repo(os.getcwd())
    if REPO_PATH is None:
        raise ValueError('No Git repository found in current or parent directories')

    NUMBER_OF_WEEKS = 2

    delta = datetime.now() - timedelta(weeks=NUMBER_OF_WEEKS)

    cmd = [
        'git',
        '-C',
        REPO_PATH,
        'log',
        '--since=' + delta.strftime('%Y-%m-%d'),
        '--format=%aN',
    ]

    output = subprocess.check_output(cmd).decode('utf-8')

    count = Counter(output.splitlines())

    max_len = max(len(author) for author in count.keys())

    for author, commit_count in count.most_common():
        length = len(author)
        spaces = max_len - length + 2
        author = author + ' ' * spaces
        print(author, commit_count)


if __name__ == '__main__':
    main()
