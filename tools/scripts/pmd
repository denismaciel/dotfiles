#!/bin/env python3
import datetime
import re
import subprocess
import sys

RE_DURATION = re.compile(r"duration=\d+")

TARGET_MOONS = 4
FULL_MOON = ""
HALF_MOON = ""
EMPTY_MOON = ""

minutes_today = 0
description = ""

with open("/home/denis/.pomodoro/history") as f:
    for i, line in enumerate(f):
        ts_raw, *_ = line.split()

        ts = datetime.datetime.fromisoformat(ts_raw)

        if ts.date() == datetime.date.today():
            (dur_raw,) = RE_DURATION.findall(line)
            duration = int(dur_raw.replace("duration=", ""))
            minutes_today += duration


def moons(minutes_today: int) -> str:
    n50, n50_remainder = divmod(minutes_today, 50)
    n25, _ = divmod(n50_remainder, 25)

    if n25 > 1:
        return 'error'

    remaining = TARGET_MOONS - n50 - bool(n50_remainder)
    return " ".join(
        [
            *(EMPTY_MOON * remaining),
            bool(n50_remainder) * HALF_MOON,
            *(n50 * FULL_MOON),
        ]
    )


hour_minutes = "{:02d}:{:02d}".format(*divmod(minutes_today, 60))

current_duration = subprocess.run(
    "pomodoro status -f '%!r'",
    shell=True,
    check=True,
    capture_output=True,
    text=True,
).stdout.strip()

description = subprocess.run(
    "pomodoro status -f '%d'",
    shell=True,
    check=True,
    capture_output=True,
    text=True,
).stdout.strip()


IS_RUNNING = len(current_duration) > 3

if IS_RUNNING:
    
    current_duration = "•" + current_duration + "•"
else:
    current_duration = ""


red = "%{B#A54242}%{F#C5C8C6}"


def color():
    if IS_RUNNING:
        return ""

    if datetime.datetime.now().second % 2 == 0:
        return red

    return ""


sys.stdout.write(
    color()
    + " "
    + moons(minutes_today)
    + " •"
    + hour_minutes
    + "• "
    + description.replace("TODO", "").strip()
    + " "
    + "%{F#1EE86F}"
    + current_duration
    + " "
)
