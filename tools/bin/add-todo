#! /bin/env python3

from subprocess import run

TODO_FILE = "/home/denis/Sync/Notes/Current/todo.md"


class EmptyTodoError(Exception):
    ...


class CompletedTodoException(Exception):
    ...


def write_to_file(todos: list[str]):
    with open(TODO_FILE, "w") as f:
        f.write("\n".join(todos))


def add_todo():
    with open(TODO_FILE, "r") as f:
        todos = [line.strip() for line in f]

    cmd = f'echo $(cat {TODO_FILE} | rofi -dmenu -p "TODO > ")'
    proc = run(cmd, shell=True, capture_output=True, text=True)
    proc.check_returncode()

    input_todo = proc.stdout.strip()

    if input_todo == "":
        raise EmptyTodoError

    # If input_todo already exists, we want to toggle it as complete
    if input_todo in todos:
        i = todos.index(input_todo)
        todos[i] = input_todo.replace("TODO", "DONE")
        write_to_file(todos)
        raise CompletedTodoException(input_todo)

    todos = [f"TODO {input_todo}"] + todos
    write_to_file(todos)


def main():
    try:
        add_todo()
    except EmptyTodoError:
        ...
    except CompletedTodoException as e:
        run(["notify-send", f"Completed {str(e)}"])
    except Exception:
        run(["notify-send", "Adding TODO failed"])
    else:
        run(["notify-send", "TODO added successfully"])


if __name__ == "__main__":
    main()
