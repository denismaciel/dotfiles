#!/bin/env python

# pomodoro status -f '%d %!r %c'

import sys
import subprocess
import re
import datetime

RE_DURATION = re.compile(r"duration=\d+")

TARGET_MOONS = 4
FULL_MOON = ""
HALF_MOON = ""
EMPTY_MOON = ""

minutes_today = 0
description = ""

with open("/home/denis/.pomodoro/history") as f:
    for i, line in enumerate(f):
        ts_raw, *_ = line.split()

        ts = datetime.datetime.fromisoformat(ts_raw)

        if ts.date() == datetime.date.today():
            (dur_raw,) = RE_DURATION.findall(line)
            duration = int(dur_raw.replace("duration=", ""))
            minutes_today += duration


def moons(minutes_today: int) -> str:
    n50, n50_remainder = divmod(minutes_today, 50)
    n25, _ = divmod(n50_remainder, 25)

    if n25 > 1:
        return 'error'

    remaining = TARGET_MOONS - n50 - bool(n50_remainder)
    return " ".join(
        [
            *(EMPTY_MOON * remaining),
            bool(n50_remainder) * HALF_MOON,
            *(n50 * FULL_MOON),
        ]
    )


hour_minutes = "{:02d}:{:02d}".format(*divmod(minutes_today, 60))

current_pomodoro = subprocess.run(
    "pomodoro status -f '%!r'",
    shell=True,
    check=True,
    capture_output=True,
    text=True,
).stdout.strip()

description = subprocess.run(
    "pomodoro status -f '%d'",
    shell=True,
    check=True,
    capture_output=True,
    text=True,
).stdout.strip()


is_running = len(current_pomodoro) > 3

if is_running:
    current_pomodoro = ">>" + current_pomodoro + "<<"
else:
    current_pomodoro = ""

red = "#[bg=colour196,fg=colour255]"
white = "#[fg=colour255]"

color = white if is_running else red

sys.stdout.write(
    color
    + description
    + " "
    + moons(minutes_today)
    + " "
    + hour_minutes
    + " "
    + current_pomodoro
)
